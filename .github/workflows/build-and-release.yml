name: Build and Release Libraries

on:
  workflow_dispatch:
  release:
    types: [created]


jobs:
  build:
    name: Build for ${{ matrix.target.name }}
    runs-on: ${{ matrix.target.os }}
    container: ${{ matrix.target.container }}
    env:
      TARGET: ${{ matrix.target.triple }}
    
    strategy:
      fail-fast: false
      matrix:
        target:
          - name: Windows
            os: windows-latest
            triple: x86_64-pc-windows-msvc
            container: ~
            shell: "powershell"
            setup: |
              mkdir -p dist/include dist/lib
            # Only copy SpeechCore libraries manually; the rest are installed via CMake
            find_libs: |
              Get-ChildItem -Path SpeechCore -Filter "*.lib" -Recurse | ForEach-Object {
                Copy-Item $_.FullName -Destination dist/lib/
              }
            # Only copy SpeechCore headers manually; the rest are installed via CMake
            find_headers: |
              Get-ChildItem -Path SpeechCore/include -Filter "*.h" -Recurse | ForEach-Object {
                $targetPath = "dist/include/" + $_.FullName.Replace("$PWD\SpeechCore\include\", "")
                $targetDir = Split-Path -Path $targetPath -Parent
                if (!(Test-Path $targetDir)) {
                  New-Item -ItemType Directory -Path $targetDir -Force
                }
                Copy-Item $_.FullName -Destination $targetPath
              }
            zip_command: |
              Compress-Archive -Path dist/include, dist/lib -DestinationPath "swift-audiogame-libs-$env:TARGET.zip"
            dependencies: |
              pip install scons

          - name: Linux-GNU
            os: ubuntu-latest
            triple: x86_64-linux-gnu
            container: 
            shell: "bash"
              image: ubuntu:latest
            setup: |
              mkdir -p dist/include dist/lib
              apt-get update
              apt-get install -y git cmake build-essential python3 python3-pip zip
            find_libs: |
              find SpeechCore -name "*.a" -exec cp {} dist/lib/ \;
            find_headers: |
              find SpeechCore/include -name "*.h" | while read header; do
                relpath=$(echo "$header" | sed 's|SpeechCore/include/||')
                target_dir=$(dirname "dist/include/${relpath}")
                mkdir -p "$target_dir"
                cp "$header" "dist/include/${relpath}"
              done
            zip_command: |
              cd dist && zip -r ../swift-audiogame-libs-$TARGET.zip include lib
            dependencies: |
              pip3 install scons
          
          - name: Linux-Musl
            os: ubuntu-latest
            triple: x86_64-linux-musl
            container:
              image: alpine:latest
            setup: |
              mkdir -p dist/include dist/lib
              apk add --no-cache git cmake make gcc g++ musl-dev python3 py3-pip zip
            find_libs: |
              find SpeechCore -name "*.a" -exec cp {} dist/lib/ \;
            find_headers: |
              find SpeechCore/include -name "*.h" | while read header; do
                relpath=$(echo "$header" | sed 's|SpeechCore/include/||')
                target_dir=$(dirname "dist/include/${relpath}")
                mkdir -p "$target_dir"
                cp "$header" "dist/include/${relpath}"
              done
            zip_command: |
              cd dist && zip -r ../swift-audiogame-libs-$TARGET.zip include lib
            dependencies: |
              pip3 install scons
          
          - name: macOS
            os: macos-latest
            triple: x86_64-apple-darwin
            container: ~
            setup: |
              mkdir -p dist/include dist/lib
            find_libs: |
              find SpeechCore -name "*.a" -exec cp {} dist/lib/ \;
            find_headers: |
              find SpeechCore/include -name "*.h" | while read header; do
                relpath=$(echo "$header" | sed 's|SpeechCore/include/||')
                target_dir=$(dirname "dist/include/${relpath}")
                mkdir -p "$target_dir"
                cp "$header" "dist/include/${relpath}"
              done
            zip_command: |
              cd dist && zip -r ../swift-audiogame-libs-$TARGET.zip include lib
            dependencies: |
              pip install scons

    steps:
      - name: Setup Environment
        shell: bash
        run: ${{ matrix.target.setup }}
        if: matrix.target.setup != ''
      
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
        if: matrix.target.name == 'Windows' || matrix.target.name == 'macOS'
      
      - name: Install Dependencies
        shell: bash
        run: ${{ matrix.target.dependencies }}
      
      - name: Install CMake
        uses: lukka/get-cmake@latest
        if: matrix.target.name == 'Windows' || matrix.target.name == 'macOS'
      
      - name: Configure CMake
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=../dist
      
      - name: Build with CMake
        run: |
          cd build
          cmake --build . --config Release
      
      - name: Install with CMake
        run: |
          cd build
          cmake --install .
      
      - name: Build SpeechCore with SCons
        run: |
          cd SpeechCore
          scons build_mode=static
          
      - name: Create directory structure
        shell: bash
        run: |
          if [ ! -d "dist/include" ] || [ ! -d "dist/lib" ]; then
            mkdir -p dist/include dist/lib
          fi

      - name: Copy SpeechCore Library Files
        shell: ${{ matrix.target.shell }}
        run: ${{ matrix.target.find_libs }}
      
      - name: Copy SpeechCore Header Files
        shell: ${{ matrix.target.shell }}
        run: ${{ matrix.target.find_headers }}
      
      - name: Generate Link Dependencies File
        shell: bash
        run: |
          cd build
          echo "# CMake generated link dependencies for Swift build plugin" > ../dist/link_dependencies.txt
          
          targets=$(cmake --build . --target help | grep -o '^.*:' | sed 's/://g' | grep -v 'help\|all\|clean')
          
          for target in $targets; do
            if [ -f "CMakeFiles/$target.dir/link.txt" ]; then
              echo "# Target: $target" >> ../dist/link_dependencies.txt
              grep -o -- "-l[^ ]*" "CMakeFiles/$target.dir/link.txt" | sort | uniq >> ../dist/link_dependencies.txt
              echo "" >> ../dist/link_dependencies.txt
            fi
          done
          
          echo "# SpeechCore dependencies" >> ../dist/link_dependencies.txt
          echo "SpeechCore requires linking against: TBD (captured from SCons if available)" >> ../dist/link_dependencies.txt
          
          find .. -name "*.pc" -exec cat {} \; >> ../dist/link_dependencies.txt
      
      - name: Create ZIP Archive
        shell: ${{ runner.os == 'Windows' && 'powershell' || 'bash' }}
        run: ${{ matrix.target.zip_command }}
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./swift-audiogame-libs-${{ env.TARGET }}.zip
          asset_name: swift-audiogame-libs-${{ env.TARGET }}.zip
          asset_content_type: application/zip
